{
  "name": "rural-producer-api",
  "version": "1.0.0",
  "description": "API for managing rural producers",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",

    "start": "nest start",
    "start:dev": "NODE_ENV=development nest start --watch",
    "start:docker": "NODE_ENV=docker nest start",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "start:pm2": "pm2 start ecosystem.config.js",

    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",

    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r ts-node/register node_modules/.bin/jest --runInBand",

    "typeorm": "typeorm-ts-node-commonjs",

    "migration:generate": "npm run typeorm -- migration:generate -d src/config/typeorm.config.ts",
    "migration:generate:dev": "NODE_ENV=development pnpm run typeorm migration:generate src/database/migrations/Migration -d src/config/typeorm.config.ts",
    "migration:generate:docker": "NODE_ENV=docker pnpm run typeorm migration:generate src/database/migrations/Migration -d src/config/typeorm.config.ts",

    "migration:run": "pnpm run typeorm migration:run -d src/config/typeorm.config.ts",
    "migration:run:dev": "NODE_ENV=development pnpm run typeorm migration:run -d src/config/typeorm.config.ts",
    "migration:run:docker": "NODE_ENV=docker pnpm run typeorm migration:run -d src/config/typeorm.config.ts",
    "migration:revert": "npm run typeorm -- migration:revert -d src/config/typeorm.config.ts",

    "seed:run": "ts-node -r tsconfig-paths/register src/database/seeds/run-seeds.ts",
    "seed:run:dev": "NODE_ENV=development ts-node -r tsconfig-paths/register src/database/seeds/run-seeds.ts",
    "seed:run:docker": "NODE_ENV=docker ts-node -r tsconfig-paths/register src/database/seeds/run-seeds.ts",

    "docker:build": "docker build -t rural-producer-api .",
    "docker:run": "docker run -p 3000:3000 rural-producer-api",
    "docker:compose": "docker-compose up",
    "docker:compose:build": "docker-compose up --build",
    "docker:compose:down": "docker-compose down"
  },
  "dependencies": {
    "@elastic/elasticsearch": "^8.15.1",
    "@nestjs/common": "^10.4.5",
    "@nestjs/config": "^3.2.3",
    "@nestjs/core": "^10.4.5",
    "@nestjs/elasticsearch": "^10.0.2",
    "@nestjs/mapped-types": "^2.0.2",
    "@nestjs/platform-express": "^10.4.5",
    "@nestjs/swagger": "^7.4.2",
    "@nestjs/typeorm": "^10.0.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "dotenv": "^16.4.5",
    "dotenv-flow": "^4.1.0",
    "nest-winston": "^1.9.7",
    "pg": "^8.13.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.20",
    "typeorm-seeding": "^1.6.1",
    "winston": "^3.15.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.4.5",
    "@nestjs/schematics": "^10.2.2",
    "@nestjs/testing": "^10.4.5",
    "@types/dotenv-flow": "^3.3.3",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.13",
    "@types/node": "^20.11.29",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^7.3.1",
    "@typescript-eslint/parser": "^7.3.1",
    "eslint": "^9.9.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-n": "^17.9.0",
    "eslint-plugin-perfectionist": "^2.8.0",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-promise": "^6.4.0",
    "jest": "^29.7.0",
    "prettier": "^3.3.3",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.4",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.4.2"
  },
  "jest": {
    "moduleFileExtensions": ["js", "json", "ts"],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "moduleNameMapper": {
      "^@/(.*)$": "<rootDir>/$1",
      "^@common/(.*)$": "<rootDir>/common/$1",
      "^@producer/(.*)$": "<rootDir>/producer/$1",
      "^@config/(.*)$": "<rootDir>/config/$1"
    }
  }
}
